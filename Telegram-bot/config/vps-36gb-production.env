# ═══════════════════════════════════════════════════════════════
#  PRODUCTION CONFIGURATION - 36GB RAM VPS
#  Target: 5M-10M Users | 100K-500K Concurrent
# ═══════════════════════════════════════════════════════════════

# ┌─────────────────────────────────────────────────────────────┐
# │  MongoDB Configuration (20GB RAM)                           │
# └─────────────────────────────────────────────────────────────┘
MONGODB_MAX_POOL_SIZE=2000              # 2000 connections for massive scale
MONGODB_MIN_POOL_SIZE=200               # Keep 200 warm connections
MONGODB_SOCKET_TIMEOUT_MS=45000         # 45s for complex queries
MONGODB_WAIT_QUEUE_TIMEOUT_MS=15000     # 15s queue wait
MONGODB_CONNECT_TIMEOUT_MS=15000        # 15s connection timeout
MONGODB_SERVER_SELECTION_TIMEOUT_MS=15000

# MongoDB Memory Settings (set in mongod.conf)
# wiredTigerCacheSizeGB: 16              # 20GB - 4GB buffer

# ┌─────────────────────────────────────────────────────────────┐
# │  Redis Configuration (8GB RAM)                              │
# └─────────────────────────────────────────────────────────────┘
REDIS_ENABLED=true
REDIS_MAX_CONNECTIONS=1000              # 1000 Redis connections
REDIS_MIN_CONNECTIONS=100               # 100 warm connections
REDIS_MAX_MEMORY=8gb                    # 8GB Redis cache
REDIS_EVICTION_POLICY=allkeys-lru

# ┌─────────────────────────────────────────────────────────────┐
# │  Application Cache (In-Memory) - 10GB                       │
# └─────────────────────────────────────────────────────────────┘
USER_CACHE_SIZE=1000000                 # 1M users in memory (~2GB)
USER_CACHE_TTL_MS=900000                # 15 minutes TTL
TASK_CACHE_SIZE=50000                   # 50K tasks (~100MB)
SESSION_CACHE_SIZE=1000000              # 1M sessions (~2GB)
REFERRAL_CACHE_SIZE=200000              # 200K referrals (~500MB)

# ┌─────────────────────────────────────────────────────────────┐
# │  Node.js Memory Configuration                               │
# └─────────────────────────────────────────────────────────────┘
NODE_OPTIONS="--max-old-space-size=8192 --max-semi-space-size=128"
# 8GB for Node.js heap
# 128MB for young generation

# ┌─────────────────────────────────────────────────────────────┐
# │  Performance Optimizations                                  │
# └─────────────────────────────────────────────────────────────┘
ENABLE_BATCH_PROCESSING=true
BATCH_SIZE=2000                         # Process 2000 items per batch
BATCH_INTERVAL_MS=50                    # 50ms batch interval

ENABLE_UPDATE_DEDUPLICATION=true
UPDATE_DEDUPLICATION_WINDOW_MS=2000     # 2 second dedup window

ENABLE_QUERY_BATCHING=true
QUERY_BATCH_SIZE=500                    # Batch 500 queries together
QUERY_BATCH_WAIT_MS=20                  # Wait 20ms for batching

# Connection Pool for Updates
ENABLE_REFERRAL_BATCHING=true
REFERRAL_BATCH_SIZE=100
REFERRAL_BATCH_INTERVAL_MS=100

# ┌─────────────────────────────────────────────────────────────┐
# │  Rate Limiting (Protective)                                 │
# └─────────────────────────────────────────────────────────────┘
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=60000              # 1 minute window
RATE_LIMIT_MAX_REQUESTS=200             # 200 requests per minute per user

# IP-based rate limiting
RATE_LIMIT_PER_IP=true
RATE_LIMIT_IP_MAX_REQUESTS=1000         # 1000 requests per IP per minute

# ┌─────────────────────────────────────────────────────────────┐
# │  Telegram Bot Configuration                                 │
# └─────────────────────────────────────────────────────────────┘
# Keep-alive for Telegram connection
TELEGRAM_KEEPALIVE_INTERVAL_MS=300000   # 5 minutes
TELEGRAM_KEEPALIVE_MSECS=60000          # 60 seconds
TELEGRAM_KEEPALIVE_MAX_SOCKETS=128      # 128 sockets

# Webhook settings (if using webhook mode)
WEBHOOK_RESPONSE_TIMEOUT_MS=45000       # 45 seconds max processing

# ┌─────────────────────────────────────────────────────────────┐
# │  Monitoring & Logging                                       │
# └─────────────────────────────────────────────────────────────┘
ENABLE_PERFORMANCE_MONITORING=true
METRICS_COLLECTION_INTERVAL=30000       # Collect metrics every 30s

LOG_LEVEL=info                          # Production log level
LOG_CONSOLE_LEVEL=warn                  # Console only shows warnings
LOG_FILE_ENABLED=true
LOG_FILE_PATH=./logs
LOG_ROTATION_DAYS=7

# ┌─────────────────────────────────────────────────────────────┐
# │  Worker Threads & Concurrency                               │
# └─────────────────────────────────────────────────────────────┘
WORKER_THREADS=8                        # 8 worker threads (10 CPU cores)
CLEANUP_INTERVAL_MS=300000              # Cleanup every 5 minutes

# ┌─────────────────────────────────────────────────────────────┐
# │  Memory Management                                          │
# └─────────────────────────────────────────────────────────────┘
MEMORY_LIMIT_MB=8192                    # 8GB limit for app
ENABLE_CACHING=true
CACHE_TTL_SECONDS=3600                  # 1 hour default TTL

# ┌─────────────────────────────────────────────────────────────┐
# │  Security                                                   │
# └─────────────────────────────────────────────────────────────┘
ENABLE_COMPRESSION=true                 # Enable gzip compression
ENABLE_ETAG=true                        # Enable ETags
TRUST_PROXY=true                        # Behind load balancer

# ┌─────────────────────────────────────────────────────────────┐
# │  Backup & Recovery                                          │
# └─────────────────────────────────────────────────────────────┘
ENABLE_AUTO_BACKUP=true
BACKUP_INTERVAL=daily
BACKUP_RETENTION_DAYS=7

# ═══════════════════════════════════════════════════════════════
#  ESTIMATED CAPACITY WITH THIS CONFIGURATION
# ═══════════════════════════════════════════════════════════════
#  Total Users:          5M - 10M
#  Concurrent Users:     100K - 500K
#  Requests/Second:      20,000 - 50,000
#  Response Time:        <200ms (P95)
#  Cache Hit Rate:       85-95%
#  Uptime:              99.9%+
# ═══════════════════════════════════════════════════════════════
