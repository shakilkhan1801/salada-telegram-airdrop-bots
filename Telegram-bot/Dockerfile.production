# --- Build stage ---
FROM node:20-alpine AS build
WORKDIR /app

# Install build deps for canvas and other native modules
RUN apk add --no-cache python3 make g++ pkgconfig cairo-dev jpeg-dev pango-dev musl-dev giflib-dev pixman-dev

COPY package.json package-lock.json ./
RUN npm ci --omit=dev=false

COPY tsconfig.json ./
COPY src ./src
COPY README.md ./

# Build TypeScript
RUN npm run build

# --- Runtime stage ---
FROM node:20-alpine AS runtime
WORKDIR /app
ENV NODE_ENV=production

# Install runtime deps for canvas
RUN apk add --no-cache python3 make g++ pkgconfig cairo-dev jpeg-dev pango-dev musl-dev giflib-dev pixman-dev cairo pango jpeg giflib pixman

# Create non-root user
RUN addgroup -S app && adduser -S app -G app

# Create logs directory with proper permissions
RUN mkdir -p /app/logs && chown -R app:app /app/logs

# Copy only necessary files
COPY --from=build /app/package.json ./package.json
COPY --from=build /app/package-lock.json ./package-lock.json
COPY --from=build /app/dist ./dist
COPY --from=build /app/src/miniapp-captcha ./src/miniapp-captcha

# Install production deps
RUN npm ci --omit=dev

# Change ownership of all app files
RUN chown -R app:app /app

# Expose ports (admin/api/miniapp/webhook)
EXPOSE 3001 3002 3004 8443

USER app

# Default command
CMD ["node", "dist/index.js"]
